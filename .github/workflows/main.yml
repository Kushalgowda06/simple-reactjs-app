name: Build and Deploy React App to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Optional manual trigger

jobs:
  build-and-push:
    name: Build Docker Image and Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/simple-reactjs-app:latest

  deploy:
    name: Deploy on EC2 via SSH
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Deploy on EC2 via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          echo "Starting deployment at $(date)"
          df -h

          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $(whoami)
            sudo systemctl enable docker
            sudo systemctl start docker
          else
            echo "Docker is already installed"
          fi

          echo "Docker version:"
          docker --version

          echo "Logging in to Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "Pulling Docker image ${{ secrets.DOCKER_USERNAME }}/simple-reactjs-app:latest"
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/simple-reactjs-app:latest

          echo "Stopping existing container if any..."
          sudo docker stop simple-reactjs-app || true
          sudo docker rm simple-reactjs-app || true 

          echo "Running new container..."
          sudo docker run -d --name simple-reactjs-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/simple-reactjs-app:latest

          echo "Current running containers:"
          sudo docker ps

          echo "Deployment complete at $(date)"
